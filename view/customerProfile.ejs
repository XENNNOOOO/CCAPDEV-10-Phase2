<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Customer Profile</title>
  <script src="https://kit.fontawesome.com/e9d3d528d3.js" crossorigin="anonymous"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/customerProfile_style.css">
</head>

<body>
  <!-- Sidebar -->
  <div class="sidebar">
    <div class="logo">
        <img src="/images/logo.png" alt="Bloemen Bites Logo">
    </div>
    <div class="navigation">
        <a href="/<%= encodeURIComponent(customer.email) %>/search_username">
            <i class="fa-solid fa-magnifying-glass" style="color: #003399;"></i>
            <p>Search</p>
        </a>        
        <a href="/<%= encodeURIComponent(customer.email) %>/reviewers">
          <i class="fa-solid fa-star" style="color: #003399;"></i>
          <p>Reviewers</p>
        </a>
        <a href="/<%= encodeURIComponent(customer.email) %>/customerProfile">
          <i class="fa-solid fa-user" style="color: #003399;"></i>
          <p>Profile</p>
        </a>
        <a href="/suli">
          <i class="fa-solid fa-arrow-right-from-bracket" style="color: #fc6467;"></i>
          <p>Logout</p>
        </a>
    </div>
  </div>

  <!-- Main Content Area --> 
  <div class="content">
    <div class="profile-section">
        <div class="profile-photo-section">
            <img src="<%= profilePicture %>" alt="Profile Picture">
            <button class="editpfp-button" onclick="window.location.href='/customer/<%= encodeURIComponent(customer.email) %>/updateProfile'">
                Edit Profile
            </button>
            <h2 id="reviews">Reviews</h2>
        </div>
        <div class="profile-details">
            <h2 id="user-name"><%= customer.username %></h2>
            <p id="user-email"><%= customer.email %></p>
            <div class="description">
                <p id="user-description"><%= customer.bio %></p>
            </div>
        </div>
    </div>

    <!-- Reviews Section -->
    <div id="reviews-container" class="reviews-container">
        <div id="reviews-list" class="reviews-list">
            <% if (reviews.length === 0) { %>
                <p>No reviews yet.</p>
            <% } else { %>
                <% reviews.forEach(review => { %>
                    <div class="review-post" data-review-id="<%= review._id %>">
                        <!-- Ellipsis Options Menu -->
                        <div class="ellipsis-container" style="position: relative; display: inline-block;">
                            <i class="fa-solid fa-ellipsis review-options-icon" data-review-id="<%= review._id %>" style="cursor: pointer;"></i>
                        
                            <!-- Dropdown Menu -->
                            <div class="review-options-dropdown" id="dropdown-<%= review._id %>" style="display: none; position: absolute; top: 20px; right: 0; background: white; border-radius: 5px; border: 1px solid #ccc; padding: 5px; box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1); min-width: 120px;">
                                <a href="#" 
                                class="edit-review-option" 
                                data-review-id="<%= review._id %>" 
                                data-restaurant-id="<%= review.restaurantId %>">
                                Edit Review
                                </a>
                                <a href="#" class="delete-review-option" data-review-id="<%= review._id %>" style="display: block; padding: 8px 12px; text-decoration: none; color: black; font-size: 14px;">
                                    Delete Review
                                </a>
                            </div>
                        </div>
                        
                        <div class="review-post-details">
                            <img class="review-user-photo" src="<%= profilePicture %>" alt="User Photo">
                            <div class="review-info">
                                <p class="review-user-name"><%= review.restaurantName %></p>
                                <p class="review-meta"><%= new Date(review.datePosted).toLocaleDateString() %> 
                                    <% if (review.edited) { %>| Edited<% } %>
                                </p>
                                <div class="review-rating">
                                    <% for (let i = 0; i < Math.floor(review.rating); i++) { %>
                                        <i class="fa-solid fa-star" style="color: #ffcd3c;"></i>
                                    <% } %>
                                    <% for (let i = Math.floor(review.rating); i < 5; i++) { %>
                                        <i class="fa-regular fa-star" style="color: #ccc;"></i>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                        <h1 class="review-title"><%= review.reviewTitle %></h1>
                        <p class="review-text"><%= review.reviewText %></p>
                        
                        <!-- Media Section -->
                        <div class="media-container">
                            <% review.media.forEach(mediaItem => { %>
                                <% let mediaUrl = String(mediaItem); %> 
                                <% if (mediaUrl.endsWith('.mp4')) { %>
                                    <video controls width="100px" height="100px">
                                        <source src="<%= mediaUrl %>" type="video/mp4">
                                    </video>
                                <% } else { %>
                                    <img src="<%= mediaUrl %>" width="100px" height="100px" style="border-radius: 8px;">
                                <% } %>
                            <% }); %>
                        </div>
                    </div>
                <% }); %>
            <% } %>
        </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
        console.log("Script loaded, adding event listeners...");

        // Toggle dropdown visibility when clicking on ellipsis
        document.querySelectorAll('.review-options-icon').forEach(icon => {
            icon.addEventListener('click', function(event) {
                event.stopPropagation(); // Prevent click from closing immediately
                const reviewId = this.getAttribute('data-review-id');
                console.log("Clicked on ellipsis for review:", reviewId);

                const dropdown = document.getElementById(`dropdown-${reviewId}`);

                // Hide all other dropdowns before showing the clicked one
                document.querySelectorAll('.review-options-dropdown').forEach(d => {
                    if (d !== dropdown) d.style.display = 'none';
                });

                dropdown.style.display = dropdown.style.display === 'none' ? 'block' : 'none';
            });
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', function() {
            document.querySelectorAll('.review-options-dropdown').forEach(dropdown => {
                dropdown.style.display = 'none';
            });
        });

        // Delete review functionality
        document.querySelectorAll('.delete-review-option').forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault();
                const reviewId = this.getAttribute('data-review-id');
                console.log("Delete button clicked for review:", reviewId);

                if (confirm('Are you sure you want to delete this review?')) {
                    fetch(`/customer/<%= encodeURIComponent(loggedUserEmail) %>/reviews/${reviewId}/delete`, { method: 'DELETE' })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.querySelector(`.review-post[data-review-id="${reviewId}"]`).remove();
                        } else {
                            alert('Failed to delete review');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred while deleting the review');
                    });
                }
            });
        });

        // Edit review functionality
        const loggedUserEmail = "<%= encodeURIComponent(customer.email) %>";
        console.log("Logged user email:", loggedUserEmail);

        document.querySelectorAll('.edit-review-option').forEach(option => {
            option.addEventListener('click', function(e) {
                e.preventDefault();

                const reviewId = this.getAttribute('data-review-id'); // Get review ID
                if (!reviewId) {
                    console.error("Error: reviewId is undefined.");
                    alert("Error: Review ID is missing.");
                    return;
                }

                const targetUrl = `/customer/${loggedUserEmail}/reviews/${reviewId}/edit`;
                console.log("Redirecting to:", targetUrl);
                window.location.href = targetUrl;
            });
        });
    });
</script>
</body>
</html>